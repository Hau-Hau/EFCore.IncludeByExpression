name: On update-dotnet-version completed

on:
  workflow_dispatch:
  pull_request:
      types: 
        - closed
      branches:
        - main

jobs:
  validate:
    runs-on: ubuntu-latest
    env:
      PULL_REQUEST_MERGED: ${{ github.event.pull_request.merged }}
    outputs:
      result: ${{ steps.validate.outputs.result }}
    steps:
      - uses: actions/checkout@v4

      - name: Validate
        id: validate
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "result=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          merged="$([[ "$PULL_REQUEST_MERGED" == "true" ]] && echo true || echo false)"
          originated_from_feature="$([[ ! "$GITHUB_HEAD_REF" =~ ^bot\/[^\/]+\/update-dotnet-version$ ]] && echo true || echo false)"
          result="$([[ "$merged" == true && "$originated_from_feature" == true ]] && echo true || echo false)"
          echo "result=$result" >> $GITHUB_OUTPUT

  try-create-new-branch:
    needs: [validate]
    if: needs.validate.outputs.result == 'true'
    runs-on: ubuntu-latest
    outputs:
      get-branch-name: ${{ steps.get-branch-name.outputs.value }}
      is-branch-exists: ${{ steps.is-branch-exists.outputs.value }}
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-git
        with:
          branch: main
          hard-reset: main

      - name: get-branch-name
        id: get-branch-name
        shell: pwsh
        run: |
          $csProjPath = "$([IO.Path]::Combine(".", "EFCore.IncludeByExpression", "EFCore.IncludeByExpression.csproj"))"
          $csprojXml = [xml](Get-Content $csProjPath)
          $projectTargetFramework = $csprojXml.Project.PropertyGroup.TargetFramework
          "value=$($projectTargetFramework)" >> $env:GITHUB_OUTPUT

      - name: is-branch-exists
        id: is-branch-exists
        run: |
          branch_name="${{ steps.get-branch-name.outputs.value }}"
          is_branch_exists=$(git ls-remote --heads origin $branch_name | grep -q "refs/heads/$branch_name" && echo true || echo false)
          echo "value=$is_branch_exists" >> $GITHUB_OUTPUT

      - uses: ./.github/actions/setup-git
        with:
          branch: ${{ steps.get-branch-name.outputs.value }}
          hard-reset: main

      - uses: ./.github/actions/push-changes
        with:
          branch: ${{ steps.get-branch-name.outputs.value }}
          force: true